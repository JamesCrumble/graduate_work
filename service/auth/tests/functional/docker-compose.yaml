version: "3"

services:
  test-redis:
    container_name: test-redis
    image: redis:7.0.4-alpine
    ports:
      - "6378:6379"
    volumes:
      - ../../config/redis.conf:/redis.conf
    command: ["redis-server", "/redis.conf"]

  test-psql:
    container_name: auth_service_postgres_test
    image: postgres:15.0-alpine
    env_file:
      - ../.env.dev.test.container
    ports:
      - "5431:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 10s
      retries: 5

  test-auth:
    build: ../../auth
    container_name: test-auth
    image: test-auth
    environment:
      - WATCHFILES_FORCE_POLLING=true
    env_file:
      - ../.env.dev.test.container
    ports:
      - "4001:4000"
    entrypoint: sh -c "/bin/bash /opt/app/entrypoint.sh"
    depends_on:
      test-redis:
        condition: service_started
      test-psql:
        condition: service_healthy

  functional-tests:
    build:
      context: .
    container_name: functional-tests
    image: functional-tests
    env_file:
      - ../.env.dev.test.container
    entrypoint: >
      sh -c "python3 utils/wait_for_redis.py && \
        python3 utils/wait_for_service.py && \
        python3 -m main"
    depends_on:
      test-redis:
        condition: service_started
      test-auth:
        condition: service_started
      test-psql:
        condition: service_healthy

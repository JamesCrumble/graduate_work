"""Init booking db structure

Revision ID: 4f378a0d6846
Revises:
Create Date: 2023-10-31 13:26:12.107583

"""
from __future__ import annotations

from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = '4f378a0d6846'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('film_events',
    sa.Column('title', sa.String(length=1024), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('movie_id', sa.UUID(), nullable=False),
    sa.Column('user_host_id', sa.UUID(), nullable=False),
    sa.Column('is_private', sa.Boolean(), nullable=True),
    sa.Column('start_event_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('event_location', sa.String(length=1024), nullable=False),
    sa.Column('duration_in_seconds', sa.Integer(), nullable=False),
    sa.Column('seats_number', sa.SmallInteger(), nullable=False),
    sa.Column('price_rub', sa.Integer(), nullable=False),
    sa.Column('state', sa.Enum('PENDING', 'FINISHED', 'CANCELED', name='filmeventstate'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('modified', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='booking'
    )
    op.create_table('booking_tickets',
    sa.Column('user_guest_id', sa.UUID(), nullable=False),
    sa.Column('film_event_id', sa.UUID(), nullable=True),
    sa.Column('state', sa.Enum('DRAFT', 'PAYED', 'UNPAYED', name='ticketstate'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('modified', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['film_event_id'], ['booking.film_events.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='booking'
    )
    op.create_table('film_event_feedbacks',
    sa.Column('title', sa.String(length=1024), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('film_event_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('rank', sa.SmallInteger(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('modified', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['film_event_id'], ['booking.film_events.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='booking'
    )
    op.create_table('private_invites',
    sa.Column('user_guest_id', sa.UUID(), nullable=False),
    sa.Column('film_event_id', sa.UUID(), nullable=True),
    sa.Column('state', sa.Enum('CREATED', 'SENDED', 'VIEWED', name='invitestate'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('modified', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['film_event_id'], ['booking.film_events.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='booking'
    )
    op.create_table('user_feedbacks',
    sa.Column('title', sa.String(length=1024), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('film_event_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('about_user_id', sa.UUID(), nullable=False),
    sa.Column('rank', sa.SmallInteger(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('modified', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['film_event_id'], ['booking.film_events.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='booking'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_feedbacks', schema='booking')
    op.drop_table('private_invites', schema='booking')
    op.drop_table('film_event_feedbacks', schema='booking')
    op.drop_table('booking_tickets', schema='booking')
    op.drop_table('film_events', schema='booking')
    # ### end Alembic commands ###
